{"ast":null,"code":"var _jsxFileName = \"/Users/dheerajp/coding/recipe-realm/client/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Chatbot.css';\nimport chef from './images/p4.png'; // Assuming 'chef' image is used in the component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  // const [showDetails, setShowDetails] = useState({}); // Example state, remove if not needed\n\n  // const handleInputChange = (e) => {\n  //   setInput(e.target.value);\n  // };\n\n  // const handleSend = async () => {\n  //   if (input.trim()) {\n  //     const userMessage = { text: input, user: true };\n\n  //     try {\n  //       // Example API call\n  //       const response = await axios.post('http://example.com/api/send-message', { message: input });\n  //       const botResponse = {\n  //         text: response.data.text,\n  //         user: false,\n  //       };\n  //       setMessages([...messages, userMessage, botResponse]);\n  //     } catch (error) {\n  //       console.error('Error sending message:', error);\n  //     }\n\n  //     setInput('');\n  //   }\n  // };\n\n  // const handleRecipeClick = (msgIndex, recipeIndex) => {\n  //   console.log(`Recipe clicked at message index ${msgIndex}, recipe index ${recipeIndex}`);\n  // };\n\n  // const handleLoadMore = async () => {\n  //   console.log('Load more recipes');\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"Xhz1M2btVGAzY17pd7+8a34J2bk=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","chef","jsxDEV","_jsxDEV","Chatbot","_s","input","setInput","messages","setMessages","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dheerajp/coding/recipe-realm/client/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Chatbot.css';\r\nimport chef from './images/p4.png'; // Assuming 'chef' image is used in the component\r\n\r\nconst Chatbot = () => {\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  // const [showDetails, setShowDetails] = useState({}); // Example state, remove if not needed\r\n\r\n  // const handleInputChange = (e) => {\r\n  //   setInput(e.target.value);\r\n  // };\r\n\r\n  // const handleSend = async () => {\r\n  //   if (input.trim()) {\r\n  //     const userMessage = { text: input, user: true };\r\n      \r\n  //     try {\r\n  //       // Example API call\r\n  //       const response = await axios.post('http://example.com/api/send-message', { message: input });\r\n  //       const botResponse = {\r\n  //         text: response.data.text,\r\n  //         user: false,\r\n  //       };\r\n  //       setMessages([...messages, userMessage, botResponse]);\r\n  //     } catch (error) {\r\n  //       console.error('Error sending message:', error);\r\n  //     }\r\n\r\n  //     setInput('');\r\n  //   }\r\n  // };\r\n\r\n  // const handleRecipeClick = (msgIndex, recipeIndex) => {\r\n  //   console.log(`Recipe clicked at message index ${msgIndex}, recipe index ${recipeIndex}`);\r\n  // };\r\n\r\n  // const handleLoadMore = async () => {\r\n  //   console.log('Load more recipes');\r\n  // };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      {/* Chatbot UI components */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC;AAC7C,OAAO,eAAe;AACtB,OAAOC,IAAI,MAAM,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACEI,OAAA;IAAKO,SAAS,EAAC;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE7B,CAAC;AAEV,CAAC;AAACT,EAAA,CA1CID,OAAO;AAAAW,EAAA,GAAPX,OAAO;AA4Cb,eAAeA,OAAO;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}