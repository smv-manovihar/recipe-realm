{"ast":null,"code":"var _jsxFileName = \"/Users/dheerajp/coding/recipe-realm/client/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Chatbot.css';\n//import chef from './images/p4.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [, setShowDetails] = useState({});\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSend = async () => {\n    if (input.trim()) {\n      const userMessage = {\n        text: input,\n        user: true\n      };\n      try {\n        // Make POST request to Flask backend for recipes\n        const response = await axios.post('http://xxxx.ngrok.io/get_recipes', {\n          query: input\n        });\n        const botResponse = {\n          text: `Here are some recipes you can make with ${input}:`,\n          recipes: response.data.context.recipes\n        };\n        setMessages([...messages, userMessage, botResponse]);\n      } catch (error) {\n        console.error('Error fetching recipes:', error);\n        // Handle error\n      }\n      setInput('');\n    }\n  };\n  const handleRecipeClick = (msgIndex, recipeIndex) => {\n    const key = `${msgIndex}-${recipeIndex}`;\n    setShowDetails(prev => ({\n      ...prev,\n      [key]: !prev[key]\n    }));\n  };\n  const handleLoadMore = async () => {\n    try {\n      // Make POST request to Flask backend for more recipes\n      const response = await axios.post('http://xxxx.ngrok.io/get_recipes', {\n        query: 'more'\n      });\n      const moreRecipes = response.data.context.recipes;\n      setMessages(prevMessages => {\n        const lastMessage = prevMessages[prevMessages.length - 1];\n        if (lastMessage && lastMessage.recipes) {\n          lastMessage.recipes = [...lastMessage.recipes, ...moreRecipes];\n          return [...prevMessages];\n        }\n        return prevMessages;\n      });\n    } catch (error) {\n      console.error('Error fetching more recipes:', error);\n      // Handle error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"VTi+Rc3PNOBul6Ddr0SUUPu9TMs=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","input","setInput","messages","setMessages","setShowDetails","handleInputChange","e","target","value","handleSend","trim","userMessage","text","user","response","post","query","botResponse","recipes","data","context","error","console","handleRecipeClick","msgIndex","recipeIndex","key","prev","handleLoadMore","moreRecipes","prevMessages","lastMessage","length","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dheerajp/coding/recipe-realm/client/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Chatbot.css';\r\n//import chef from './images/p4.png';\r\n\r\nconst Chatbot = () => {\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [, setShowDetails] = useState({});\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (input.trim()) {\r\n      const userMessage = { text: input, user: true };\r\n      \r\n      try {\r\n        // Make POST request to Flask backend for recipes\r\n        const response = await axios.post('http://xxxx.ngrok.io/get_recipes', { query: input });\r\n        const botResponse = {\r\n          text: `Here are some recipes you can make with ${input}:`,\r\n          recipes: response.data.context.recipes,\r\n        };\r\n        setMessages([...messages, userMessage, botResponse]);\r\n      } catch (error) {\r\n        console.error('Error fetching recipes:', error);\r\n        // Handle error\r\n      }\r\n\r\n      setInput('');\r\n    }\r\n  };\r\n\r\n  const handleRecipeClick = (msgIndex, recipeIndex) => {\r\n    const key = `${msgIndex}-${recipeIndex}`;\r\n    setShowDetails((prev) => ({ ...prev, [key]: !prev[key] }));\r\n  };\r\n\r\n  const handleLoadMore = async () => {\r\n    try {\r\n      // Make POST request to Flask backend for more recipes\r\n      const response = await axios.post('http://xxxx.ngrok.io/get_recipes', { query: 'more' });\r\n      const moreRecipes = response.data.context.recipes;\r\n\r\n      setMessages((prevMessages) => {\r\n        const lastMessage = prevMessages[prevMessages.length - 1];\r\n        if (lastMessage && lastMessage.recipes) {\r\n          lastMessage.recipes = [...lastMessage.recipes, ...moreRecipes];\r\n          return [...prevMessages];\r\n        }\r\n        return prevMessages;\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching more recipes:', error);\r\n      // Handle error\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      {/* Header and Message Display */}\r\n      {/* Input Field and Send Button */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}